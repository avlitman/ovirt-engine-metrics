---
- name: Stop and disable fluentd service, if logging collector is Rsyslog
  service:
    name: fluentd
    state: stopped
    enabled: false
  ignore_errors: true

- name: Check if vdsm log file exist
  stat:
    path: /var/log/vdsm/vdsm.log
  register: vdsm_log_exists

- name: Check if engine log file exist
  stat:
    path: /var/log/ovirt-engine/engine.log
  register: engine_log_exists

- name: Set collect_ovirt_vdsm_log fact
  set_fact:
    collect_ovirt_vdsm_log: '{{ true if vdsm_log_exists.stat.exists else false }}'
  when: collect_ovirt_vdsm_log is undefined

- name: Set collect_ovirt_engine_log fact
  set_fact:
    collect_ovirt_engine_log: '{{ true if engine_log_exists.stat.exists else false }}'
  when: collect_ovirt_engine_log is undefined

- name: Check if listen.conf file exist
  stat:
    path: /etc/rsyslog.d/listen.conf
  register: listen_conf_exists

- name: Overwrite listen.conf content
  copy:
    content: '#$SystemLogSocketName /run/systemd/journal/syslog'
    dest: /etc/rsyslog.d/listen.conf
  when: listen_conf_exists.stat.exists

- name: Restart Rsyslog
  service:
    name: rsyslog
    state: restarted
  when: listen_conf_exists.stat.exists

- block:

    - name: Check Hosted Engine VM name
      command: engine-config -g HostedEngineVmName --cver=general
      register: hosted_engine_vm_name_result

    - name: Query Hosted Engine cluster name
      command: /usr/share/ovirt-engine/dbscripts/engine-psql.sh -t -c "select cluster_name from vms where vm_name='{{ hosted_engine_vm_name_result.stdout }}'"
      register: hosted_engine_vm_cluster_name_result
      ignore_errors: true

    - name: Set engine_cluster fact if engine is running on a VM
      set_fact:
        engine_cluster: "{{ hosted_engine_vm_cluster_name_result.stdout | trim }}"
      ignore_errors: true
      when: hosted_engine_vm_cluster_name_result.stdout | trim != ""

    - name: Set engine_cluster fact if engine is running as standalone
      set_fact:
        engine_cluster: "Standalone"
      ignore_errors: true
      when: hosted_engine_vm_cluster_name_result.stdout | trim == "" or hosted_engine_vm_cluster_name_result.stdout is undefined

  when:
    - hostvars[inventory_hostname]["ovirt_vds_cluster_name"] is undefined
    - host_deploy_cluster_name is undefined

- name: Set logging facts
  set_fact:
    logging_role_path: '{{ logging_role_path }}'
    rsyslog_max_message_size: '{{ rsyslog_max_message_size|d("64k") }}'
    collect_ovirt_collectd_metrics: '{{ collect_ovirt_collectd_metrics|d(true) }}'
    ovirt_vds_cluster_name: '{{ hostvars[inventory_hostname]["ovirt_vds_cluster_name"]|d(host_deploy_cluster_name)|d(engine_cluster) }}'

- block:
    - name: Copy elasticsearch CA certificate to host
      copy:
        src: '{{ local_fluentd_elasticsearch_ca_cert_path }}'
        dest: '{{ rsyslog_elasticsearch_ca_cert_path }}'
        owner: '{{ logging_owner }}'
        group: '{{ logging_group }}'
        mode: '{{ logging_config_mode }}'
      when:
        - use_omelasticsearch_cert

    - name: Copy elasticsearch client certificate
      copy:
        src: '{{ local_fluentd_elasticsearch_client_cert_path }}'
        dest: '{{ rsyslog_elasticsearch_client_cert_path }}'
        owner: '{{ logging_owner }}'
        group: '{{ logging_group }}'
        mode: '{{ logging_config_mode }}'
      when:
        - use_omelasticsearch_cert

    - name: Copy elasticsearch client key
      copy:
        src: '{{ local_fluentd_elasticsearch_client_key_path }}'
        dest: '{{ rsyslog_elasticsearch_client_key_path }}'
        owner: '{{ logging_owner }}'
        group: '{{ logging_group }}'
        mode: '{{ logging_config_mode }}'
      when:
        - use_omelasticsearch_cert

    - name: Set logging_outputs facts to send metrics to elasticsearch with HTTPS and certificates
      set_fact:
        logging_outputs:
          - name: ovirt-logs-elasticsearch
            type: elasticsearch
            logs_collections:
              - name: 'ovirt'
            server_host: '{{ elasticsearch_host }}'
            server_port: '{{ elasticsearch_port|d(9200) }}'
            index_prefix: '{{ rsyslog_elasticsearch_index_prefix_logs|d("project.ovirt-logs") }}'
            bulkmode: '{{ rsyslog_elasticsearch_bulkmode_logs|d("on") }}'
            writeoperation: '{{ rsyslog_elasticsearch_writeoperation_logs|d("create") }}'
            bulkid: '{{ rsyslog_elasticsearch_bulkid_logs|d("id_template") }}'
            dynbulkid: '{{ rsyslog_elasticsearch_dynbulkid_logs|d("on") }}'
            retryfailures: '{{ rsyslog_elasticsearch_retryfailures_logs|d("on") }}'
            retryruleset: '{{ rsyslog_elasticsearch_retryruleset_logs|d("try_es") }}'
            usehttps: '{{ rsyslog_elasticsearch_usehttps_logs|d("on") }}'
            allowUnsignedCerts: '{{ logs_allowUnsignedCerts|d("off") }}'
            ca_cert: '{{ rsyslog_elasticsearch_ca_cert_path|d("/etc/rsyslog.d/elasticsearch_ca_cert.pem") }}'
            cert: '{{ rsyslog_elasticsearch_client_cert_path|d("/etc/rsyslog.d/elasticsearch_client_cert.pem") }}'
            key: '{{ rsyslog_elasticsearch_client_key_path|d("/etc/rsyslog.d/elasticsearch_client_key.pem") }}'
          - name: ovirt-metrics-elasticsearch
            type: elasticsearch
            logs_collections:
              - name: 'ovirt'
            server_host: '{{ elasticsearch_host }}'
            server_port: '{{ elasticsearch_port|d(9200) }}'
            index_prefix: '{{ rsyslog_elasticsearch_index_prefix_metrics|d("project.ovirt-metrics") }}'
            bulkmode: '{{ rsyslog_elasticsearch_bulkmode_metrics|d("on") }}'
            writeoperation: '{{ rsyslog_elasticsearch_writeoperation_metrics|d("create") }}'
            bulkid: '{{ rsyslog_elasticsearch_bulkid_metrics|d("id_template") }}'
            dynbulkid: '{{ rsyslog_elasticsearch_dynbulkid_metrics|d("on") }}'
            retryfailures: '{{ rsyslog_elasticsearch_retryfailures_metrics|d("off") }}'
            retryruleset: '{{ rsyslog_elasticsearch_retryruleset_metrics|d("try_es") }}'
            usehttps: '{{ rsyslog_elasticsearch_usehttps_metrics|d("on") }}'
            allowUnsignedCerts: '{{ metrics_allowUnsignedCerts|d("off") }}'
            ca_cert: '{{ rsyslog_elasticsearch_ca_cert_path|d("/etc/rsyslog.d/elasticsearch_ca_cert.pem") }}'
            cert: '{{ rsyslog_elasticsearch_client_cert_path|d("/etc/rsyslog.d/elasticsearch_client_cert.pem") }}'
            key: '{{ rsyslog_elasticsearch_client_key_path|d("/etc/rsyslog.d/elasticsearch_client_key.pem") }}'
  when: logging_output_type == 'elasticsearch' and use_omelasticsearch_cert

- block:
    - name: Set logging_outputs facts for sending metrics to elasticsearch with HTTP request
      set_fact:
        logging_outputs:
          - name: ovirt-logs-elasticsearch
            type: elasticsearch
            logs_collections:
              - name: 'ovirt'
            server_host: '{{ elasticsearch_host }}'
            server_port: '{{ elasticsearch_port|d(9200) }}'
            index_prefix: '{{ rsyslog_elasticsearch_index_prefix_logs|d("project.ovirt-logs") }}'
            bulkmode: '{{ rsyslog_elasticsearch_bulkmode_logs|d("on") }}'
            writeoperation: '{{ rsyslog_elasticsearch_writeoperation_logs|d("create") }}'
            bulkid: '{{ rsyslog_elasticsearch_bulkid_logs|d("id_template") }}'
            dynbulkid: '{{ rsyslog_elasticsearch_dynbulkid_logs|d("on") }}'
            retryfailures: '{{ rsyslog_elasticsearch_retryfailures_logs|d("on") }}'
            retryruleset: '{{ rsyslog_elasticsearch_retryruleset_logs|d("try_es") }}'
            usehttps: '{{ rsyslog_elasticsearch_usehttps_logs|d("on") }}'
          - name: ovirt-metrics-elasticsearch
            type: elasticsearch
            logs_collections:
              - name: 'ovirt'
            server_host: '{{ elasticsearch_host }}'
            server_port: '{{ elasticsearch_port|d(9200) }}'
            index_prefix: '{{ rsyslog_elasticsearch_index_prefix_metrics|d("project.ovirt-metrics") }}'
            bulkmode: '{{ rsyslog_elasticsearch_bulkmode_metrics|d("on") }}'
            writeoperation: '{{ rsyslog_elasticsearch_writeoperation_metrics|d("create") }}'
            bulkid: '{{ rsyslog_elasticsearch_bulkid_metrics|d("id_template") }}'
            dynbulkid: '{{ rsyslog_elasticsearch_dynbulkid_metrics|d("on") }}'
            retryfailures: '{{ rsyslog_elasticsearch_retryfailures_metrics|d("off") }}'
            retryruleset: '{{ rsyslog_elasticsearch_retryruleset_metrics|d("try_es") }}'
            usehttps: '{{ rsyslog_elasticsearch_usehttps_metrics|d("on") }}'
  when: logging_output_type == 'elasticsearch' and not use_omelasticsearch_cert

- name: Run rsyslog sub-role
  include_role:
    name: oVirt.metrics/roles/oVirt.linux-system-roles-logging
