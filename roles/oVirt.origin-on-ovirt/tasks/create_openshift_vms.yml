---
# Create OpenShift virtual machines

- include_tasks: build_vm_list.yml

- name: Create OpenShift VMs
  include_role:
    name: oVirt.vm-infra

- name: Add master Vms to the masters inventory group
  add_host:
    groups: masters
    hostname: '{{ [item.name, item.count - 1, ".", openshift_ovirt_dns_zone] | join }}'
  with_items: "{{ openshift_ovirt_vm_manifest }}"
  when: item.count > 0 and item.name.startswith('master')

- block:
    - name: Set host_dns_entry fact
      set_fact:
        host_dns_entry: "{{ hostvars[groups['masters'][0]]['ansible_host'] }} {{ hostvars[groups['masters'][0]]['inventory_hostname'] }} etcd.{{ public_hosted_zone }} openshift-master.{{ public_hosted_zone }} openshift.{{ public_hosted_zone }} docker-registry-default.apps.{{ public_hosted_zone }} webconsole.openshift-web-console.svc registry-console-default.apps.{{ public_hosted_zone }} master-etcd-{{ public_hosted_zone }} kibana.{{ public_hosted_zone }} es.{{ public_hosted_zone }}"

    - name: Add dns line to localhost and bastion machines /etc/hosts if host_dns_entry file exists
      lineinfile:
        path: /etc/hosts
        regexp: 'webconsole\.openshift\-web\-console\.svc'
        line: "{{ host_dns_entry }}"
        owner: root
        group: root
        mode: 0644
      delegate_to: '{{ item }}'
      with_items:
        - localhost
        - '{{ openshift_ovirt_bastion_machine_name  }}'
        - '{{ hostvars[groups["masters"][0]]["inventory_hostname"] }}'
  when:
    - create_host_entry|d(false)|bool == true
    - openshift_ovirt_all_in_one

- block:
    - name: Satellite preparation
      command: "rpm -Uvh http://{{ rhsub_server }}/pub/katello-ca-consumer-latest.noarch.rpm"
      args:
        creates: /etc/rhsm/ca/katello-server-ca.pem
      when:
        - rhsub_server is defined
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"

    - name: Register the VM using activation key
      redhat_subscription:
        activationkey: "{{ rhsub_ak }}"
        org_id: "{{ rhsub_orgid }}"
      register: rh_subscription
      until: rh_subscription is succeeded
      no_log: true
      when:
        - rhsub_ak is defined
        - rhsub_orgid is defined
        - rhsub_server is defined
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"

    - name: Register the VM using user/password
      redhat_subscription:
        state: present
        username: '{{ rhsub_user }}'
        password: '{{ rhsub_pass }}'
        pool_ids: '{{ rhsub_pool }}'
      register: rh_subscription
      until: rh_subscription is succeeded
      no_log: true
      when:
        - rhsub_user is defined
        - rhsub_pass is defined
        - rhsub_server is undefined
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"

    - name: Disable all RHSM repositories
      rhsm_repository:
        name: '*'
        state: disabled
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"
      register: task_result
      when:
        - manage_packages|default(true)

    - name: Reboot system
      reboot:
        reboot_timeout: 300
      delegate_to: '{{ item }}'
      with_items: "{{ groups['masters'] }}"
      when:
        - task_result is changed
        - manage_packages|default(true)
  when: openshift_distribution != 'origin'
