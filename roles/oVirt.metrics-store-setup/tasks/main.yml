- block:
    - name: Log into logging project
      shell: 'oc project {{ logging_namespace }}'

    - name: Remove metrics and logs index uuid files
      file:
        state: absent
        path: '{{ item }}'
      with_items:
        - /root/ovirt-metrics-{{ ovirt_env_name }}-uuid
        - /root/ovirt-logs-{{ ovirt_env_name }}-uuid

    - name: Getting the ovirt-metrics-{{ ovirt_env_name}} uuid
      shell: oc get project ovirt-metrics-{{ ovirt_env_name }} -o jsonpath='{.metadata.uid}' > /tmp/ovirt-metrics-{{ ovirt_env_name }}-uuid

    - name: Getting the ovirt-logs-{{ ovirt_env_name}} uuid
      shell: oc get project ovirt-logs-{{ ovirt_env_name}} -o jsonpath='{.metadata.uid}' > /tmp/ovirt-logs-{{ ovirt_env_name}}-uuid

    - name: Getting CA cert
      shell: |
        {% raw %}
        oc get secret logging-fluentd --template='{{ index .data "ca" }}' | base64 -d > /tmp/fluentd-ca
        {% endraw %}

    - name: Getting SSL client certificate
      shell: |
        {% raw %}
        oc get secret logging-fluentd --template='{{index .data "cert"}}' | base64 -d > /tmp/fluentd-cert
        {% endraw %}

    - name: GettingSSL client key
      shell: |
        {% raw %}
        oc get secret logging-fluentd --template='{{index .data "key"}}' | base64 -d > /tmp/fluentd-key
        {% endraw %}

    - name: Copy certificates to engine machine
      fetch:
        src: '/tmp/{{ item }}'
        dest: '{{ ovirt_metrics_pkg_sysconf_dir }}/{{ item }}'
        flat: yes
      with_items:
        - ovirt-metrics-{{ ovirt_env_name}}-uuid
        - ovirt-logs-{{ ovirt_env_name}}-uuid
        - fluentd-ca
        - fluentd-cert
        - fluentd-key

    - name: Read metrics index uuid
      delegate_to: localhost
      run_once: true
      set_fact:
        metrics_index_uuid: "{{ lookup('file', ovirt_metrics_pkg_sysconf_dir+'/ovirt-metrics-'+ovirt_env_name+'-uuid') }}"

    - name: Read logs index uuid
      delegate_to: localhost
      run_once: true
      set_fact:
        logs_index_uuid: "{{ lookup('file',  ovirt_metrics_pkg_sysconf_dir+'/ovirt-logs-'+ovirt_env_name+'-uuid') }}"

    - name: Install Viaq metrics store config file
      delegate_to: localhost
      run_once: true
      template:
        src: viaq_post_install_params.conf
        dest: '{{ ovirt_metrics_config_yml_dir }}/10-viaq_config.yml'
        owner: '{{ ovirt_metrics_config_yml_d_owner }}'
        group: '{{ ovirt_metrics_config_yml_d_group }}'
        mode: '{{ ovirt_metrics_config_yml_d_mode }}'

    - name: Include oVirt metrics config.yml.d vars directory
      include_vars:
        dir: '{{ ovirt_metrics_config_yml_dir }}'
        ignore_files: ['README.md']
      run_once: true

  when: viaq_metrics_store and logging_output_type == "elasticsearch"
