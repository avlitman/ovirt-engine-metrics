- name: Log into logging project
  shell: oc project logging

- name: Remove metrics and logs index uuid files
  file:
    state: absent
    path: '{{ item }}'
  with_items:
    - /root/ovirt-metrics-{{ ovirt_env_name }}-uuid
    - /root/ovirt-logs-{{ ovirt_env_name }}-uuid

- name: Getting the ovirt-metrics-{{ ovirt_env_name}} uuid
  shell: oc get project ovirt-metrics-{{ ovirt_env_name }} -o jsonpath='{.metadata.uid}' > /tmp/ovirt-metrics-{{ ovirt_env_name }}-uuid

- name: Getting the ovirt-logs-{{ ovirt_env_name}} uuid
  shell: oc get project ovirt-logs-{{ ovirt_env_name}} -o jsonpath='{.metadata.uid}' > /tmp/ovirt-logs-{{ ovirt_env_name}}-uuid

- name: Getting CA cert
  shell: |
    {% raw %}
    oc get secret logging-fluentd --template='{{ index .data "ca" }}' | base64 -d > /tmp/fluentd-ca
    {% endraw %}

- name: Getting SSL client certificate
  shell: |
    {% raw %}
    oc get secret logging-fluentd --template='{{index .data "cert"}}' | base64 -d > /tmp/fluentd-cert
    {% endraw %}

- name: GettingSSL client key
  shell: |
    {% raw %}
    oc get secret logging-fluentd --template='{{index .data "key"}}' | base64 -d > /tmp/fluentd-key
    {% endraw %}

- name: Copy certificates to engine machine
  fetch:
    src: '/tmp/{{ item }}'
    dest: '{{ ovirt_metrics_pkg_sysconf_dir }}/{{ item }}'
    flat: yes
  with_items:
    - ovirt-metrics-{{ ovirt_env_name}}-uuid
    - ovirt-logs-{{ ovirt_env_name}}-uuid
    - fluentd-ca
    - fluentd-cert
    - fluentd-key

- name: Create admin user
  shell: oc create user admin
  ignore_errors: True

- name: Create an Identity with identity provider allow_all
  shell: oc create identity allow_all:admin
  ignore_errors: True

- name: Create a user/identity mapping for the created user and identity
  shell: oc create useridentitymapping allow_all:admin admin
  ignore_errors: True

- name: Binds the admin role to specified users for all projects in the cluster
  shell: oadm policy add-cluster-role-to-user cluster-admin admin
  ignore_errors: True

- name: Assign the password immediately without login
  shell: oc login --username=admin --password=admin
  ignore_errors: True

- name: Log back in as admin user
  shell: oc login --username=system:admin

- name: Generate curator configmap
  template:
    src: ovirt_metrics_curator_configmap.template
    dest: '{{ curator_configmap_file_path }}'
    mode: 0644

- name: Delete the current curator configmap file
  shell: oc delete configmap logging-curator ; sleep 1
  run_once: true

- name: Create the new curator configmap file
  shell: oc create configmap logging-curator --from-file=config.yaml='{{ curator_configmap_file_path }}' ; sleep 1

- name: Redeploy the curator
  shell: oc deploy --latest logging-curator

- name: Assign an IP Address to the Elasticsearch Service
  shell: oc patch svc logging-es -p '{"spec"{{":"}}{"externalIPs"{{":"}}["{{ ansible_default_ipv4.address }}"]}}'
